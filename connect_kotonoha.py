import os
import sys
sys.path.append('..')
import collect_aoj
import kotonoha

# l_userId = ['akinobu', 'tefu417', 'baron2']
l_userId_top100 = [
  'jakenu0x5e',
  # 'flippergo',
  'kuwaaaaaaaaaaaaaaaaa',
  'takakuwa',
  # 'juno0123jp',
  'kichi941',
  'bal4u',
  'cima',
  # 'tishii',
  'novel',
  'n3301',
  # 'iEhSinRefcuL',
  'iehn',
  'tricom',
  'tige',
  'dn6049949',
  'KubotaNoriko1230',
  'cjoedwio',
  'pypy',
  'HiroN',
  'bs5lNkJ',
  'TeaEM',
  'stasta',
  # 'wkanda',
  'kyuna',
  'ikatakos',
  'manaka',
  'puyopop',
  'RandyWaterhouse',
  'yoheikikuta',
  'tsuru_aji',
  # 'takooo',
  'kayabuyama8x',
  # 'utagoromo',
  'bonoron',
  'doorgod',
  # 'tom_of_death',
  'Mackie',
  'y1721',
  'tkawata',
  'peroon',
  'nyon',
  'leeav_ten',
  'papeppo',
  'momiji6',
  # 'renzy',
  'meiadayz',
  'yreb',
  # 'tmentaiko',
  'htkb',
  # 'charismafu',
  'misuta',
  # 'NatsubiSogan',
  'zizi',
  'monolith',
  'n_knuu',
  'baron2',
  # 'asdfghjkl1234567890',
  'mxg7y',
  # 'blue_pupa',
  'rockbirds12',
  # 'kimotot',
  'zywuwen',
  'tefu417',
  'yugami',
  'halfpennyworths',
  # 'kanadeah',
  # 'edftz',
  'SMON',
  'nagisa314',
  'shana',
  'nrkt',
  'nananashi',
  'vjudge2',
  'takumiy',
  'rune',
  'PythonHolic',
  'kira924age',
  # 'vjudge4',
  'sota1235',
  'soutatahara',
  # 'Kenjo1209',
  'root123456789',
  'tappinasa',
  # 'vjudge1',
  'naoto172',
  'tallestorange',
  'Sim0000',
  # 'rs90004602',
  # 'su_565fx',
  'crazydiamond',
  'toyuzuko',
  'toricor',
  'jj1guj',
  'novemura',
  'nut5ch3st',
  'Fulltea',
  # 'kawai_sk',
]
l_userId20 = [
  'Pure70os',
  'nagasw0603',
  'yunakura',
  'proayu33',
  'aaa119',
  'mimimi323',
  # 'kaseijin',
  'myst7',
  'roy2020',
  # 'moriayu65',
  'decodeco',
  'rei089',
  'mokomoko58',
  'mayu_build_01',
  'sh415',
  'gem19',
  # 'lamp7',
  'jngkk97',
  'mio0103',
  'oreo0320',
  'kinako_shinonome',
  'obrm2k',
  'blue2020',
  'Aliceandkumasan',
  'kyk_hm_99',
  'iori125',
  'moeknm',
  'snoopea',
  'yuko0828',
  # 'pienpien129',
  'artms007',
  'mmk20',
  'yui_k',
  'ysk18_',
  'shioshiooshio',
  'HARU55',
  'bn1224',
  'Will25',
  'tamamii20',
  'tatejima',
  'ym09rr6',
  'kfwh87',
  'honot',
  'meika',
  'Nakada065',
  'Pooh0514',
  'udonman',
  'salmon04',
  'yuzukosyo',
  'phantom_0422',
  'Nanairo0716',
  'hoshitaro32',
  'lisa_06',
  'miyu777',
  'prprpr',
  'mai0526',
  'giraffe09',
  'koyuki',
  'maple13',
  'Kunitomo',
  'tom99',
  'guoguo',
  'kurumi048',
  'nabenabe0927',
  'honoka46',
  'mai0321',
  'Lemon_1127',
  'wonka3065',
  'Hui0946',
  'maih120615',
  'kurumin212',
  'okrn_cindy',
  'yukka_rinrin',
  'ayk_rb_1103',
  'momokai',
  'kazari',
  'Haru157',
  'aoaoaoi',
  'kori21',
  'blackpinky',
  'arashi99',
  'water0914',
  'm1916075_',
  'akpinee',
  'umnkit0922',
  'ayame_1001',
  'KA1NA0913',
  'miu25',
  'blues11',
  'stk95',
  'kkk2m',
  'Kureha',
  'rt56',
  'ltwx4649',
  'horichan',
  'Shion20',
  's_68',
  'yuyu268',
  'kana0409',
  'shoko_a_',
  'dice37',
  'ucacao33',
  'Shiori_Y',
  'asdfghqwerty',
  '_gm49',
  'pororin32',
  'su1424zu',
  'miuchan1',
  'harapeco',
  'gon35',
  'slow1224',
  'hamuhamu12',
  'manami1456',
  'ss10225_',
  'miyh2523',
  'ai0322',
  'mochildbel2',
  'natsuki0804',
  'mnh24686954',
  'ty_21916058',
  'miiyu',
  'matsuki20',
  'tokkankoji',
  'apoten0418',
  'mh21716087',
  'bono2325',
  'jwu37',
  'rena0207',
  's__wk101',
  'tkzw79',
  'crescent_moon',
  'apple05',
  'maimada0519',
  'konkon666',
  'pen8pan9pon',
  'm1816040kc',
  'marimowakame7',
  'Yknnn14',
  'me72',
  'mao0615',
  'nanako1116',
  'Vellu0129',
  'nagoyeah',
  'yuuui',
  'sugarchan0',
  'sabuk421',
  'Yuki13',
  'peperomiadam',
  'okashi77',
  'Shino107',
  'aoi_0326',
  'RyokoAsai',
  'yuuu197',
  'zawa7',
  'ishiyama0801',
  'hisoka',
  'minmin1208',
  'yamamotokotoha',
  'yuhy104',
]
l_problemId = [
  # 'ITP1_1_A', 
  # 'ITP1_1_B', 
  # '0335', 
  # '0380', 
  # '0315', 
  # 'ITP1_1_C', 
  # 'ITP1_2_A', 
  # 'ITP1_2_B', 
  # '0357', 
  # '0381', 

  # '0257', 
  # 'ITP1_1_D', 
  # 'ITP1_4_A', 
  # 'ITP1_4_B', 
  # '0094', 
  # 'ITP1_2_C', 
  # 'ITP1_2_D', 
  # '0345', 
  # '0641', 
  # '0652', 

  # 'ITP1_3_A', 
  # '0277', 
  # '0276', 
  # '0173', 
  # '0256', 
  # 'ITP1_3_B', 
  # 'ITP1_3_C', 
  # '0003', 
  # '0007', 
  # '0521', 
  # 'ITP1_3_D', 

  # '0000', 
  # 'ITP1_5_A', 
  # 'ITP1_5_B', 
  # 'ITP1_5_C', 
  # 'ITP1_4_C', 
  # 'ITP1_4_D', 
  # '1147', 
  # '0052', 
  # 'ALDS1_10_A', 
  # 'ALDS1_5_C', 

  # 'ITP1_6_A', 
  # '0592', 
  # '0619', 
  # '0533', 
  # '0511', 
  # '0407', 
  # '0516', 
  # '0001', 
  # '0028', 
  # '0219', 

  # '0020', <=
  # 'ITP1_8_A', <=
  # 'ITP1_8_C', 
  # 'ITP1_8_B', 
  # '2271', 
  # 'ITP1_9_A', 
  # 'ITP1_8_D', 
  # 'ALDS1_14_A', 
  # 'ITP1_9_B', 
  # 'ITP1_9_C', 
  # '0174', 

  # 'ITP1_10_A', 
  # 'ITP1_10_B', 
  # 'ITP1_10_C', 
  # 'ITP1_7_A', 
  # 'ITP1_7_B', 
  # 'ITP1_6_B', 
  # 'ITP1_6_D', 
  # 'ITP1_7_D', 
  # 'ITP1_7_C', 
  # 'ITP1_10_D', 

  # 'NTL_1_A', 
  # 'NTL_1_B', 
  # '0197', 
  'NTL_1_C', 
  'ALDS1_1_B', 
  # 'ALDS1_1_C', 
  # '0009', 
  # '1200', 
  # '0158', 
  # '0014', 
  # '0004', 
  # '0080', 
  # '2220', 

  # '0084', 
  # '0006', 
  # '1042', 
  # '1044', 
  # '0522', 
  # '0063', 
  # '0512', 
  # '0029', 
  # '0050', 
  # '0064', 
  # '0025', 

  # '1153', 
  # '2197', 
  # '1192', 
  # '1616', 
  # '1624', 
  # '1172', 
  # '2406', 
  # '2331', 
  # '1141', 

  # '0208', 
  # '2298', 
  # '0317', 
  # '1165', 
  # '1186', 
  # '1142', 
  # '1601', 
  # '1609', 
  # '1193', 
  # '2013', 
  # '1173', 

  # '2522', 
  # '2772', 
  # '0176', 
  # '0287', 
  # '0109', 
  # '0506', 
  # '0040', 
  # '0077', 
  # 'ALDS1_10_C', 

  # '0393', 
  # '0033', 
  # '1045', 
  # '0008', 
  # '0096', 
  # '0030', 
  # '0097', 
  # '0092', 

  # 'ALDS1_1_D', 
  # 'ALDS1_3_A', 
  # 'ALDS1_3_B', 
  # 'ALDS1_4_A', 
  # 'ALDS1_4_B', 
  # 'ALDS1_4_D', 
  # 'ALDS1_3_D', 
  # 'ALDS1_5_A', 
  # '0118', 
  # 'ALDS1_13_A', 
  # 'ALDS1_13_B', 
  # '0168', 
  # 'DPL_1_A', 
  # 'DPL_1_B', 
  # '2272', 

  # '1130', 
  # '1160', 
  # '1610', 
  # '1626', 
  # '1167', 
  # '1625', 
  # '1161', 
  # '1611', 
  # '1131', 
  # '1194', 
  # '1144', 
  # '1156', 
]
l_problemId_A = ['ITP1_8_A', '0020', 'ITP1_9_A', 'ITP1_8_C']
l_problemId_B = ['NTL1_C', 'ALDS1_1_B', '0197', 'NTL_1_A']

def getCode(l_userId, l_problemId):
  for problemId in l_problemId:
    for userId in l_userId:
      print('@@get: ', userId, problemId)
      collect_aoj.download(userId, problemId)

def trans_kotonoha(py_file):
  code = ''
  transpiler = kotonoha.Kotonoha()
  transpiler.load('python3:builtin:random')

  with open(py_file) as f:
    py_code = f.read()
    if py_code:
      code = transpiler.compile(py_code)
  return code

def trans_download(userId, problemId, py_file):
  code = trans_kotonoha(py_file)
  os.makedirs(f'data/{problemId}/trans_{problemId}', exist_ok=True)
  if code:
    with open(f'data/{problemId}/trans_{problemId}/{userId}_{problemId}_kotonoha.py', 'w') as f:
      f.write(code)

def trans(l_userId, l_problemId):
  for problemId in l_problemId:
    for userId in l_userId:
      trans_download(userId, problemId, f'data/{problemId}/{userId}_{problemId}.py')

if __name__ == '__main__':
  for l in [l_userId_top100, l_userId20]:
    getCode(l, l_problemId_B)
  #   trans(l, l_problemId)

  # getCode(l_userId20, l_problemId)
  # trans(l_userId20, l_problemId)
